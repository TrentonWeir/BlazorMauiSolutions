@using JeagerJak.com.Shared.Classes;
@inherits LayoutComponentBase

<MudThemeProvider @ref="themeProvider" @bind-IsDarkMode="isDarkMode" Theme="_theme"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudText Typo="Typo.h6"><b>@siteTitle</b></MudText>
        <MudSpacer/>
        <MudIconButton Icon="@DarkModeIcon()" Color="Color.Inherit" OnClick="() => ToggleDarkMode()"/>
        <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Link="https://mudblazor.com/" Target="_blank" />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor/" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText>@siteTitle</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private string siteTitle = "Jeager Jak";
    private MudThemeProvider? themeProvider;
    private MudTheme _theme = JeagerTheme.Theme;
    bool _drawerOpen = false;
    bool isDarkMode = false;
    void ToggleDarkMode() => isDarkMode = !isDarkMode;
    string DarkModeIcon() => isDarkMode ? Icons.Material.Filled.Brightness3 : Icons.Material.Filled.Brightness4;

    protected override void OnInitialized()
    {
        _theme.Typography.Default.FontFamily = new[] { "Chakra", "Petch" };
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isDarkMode = await themeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }


    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}